# Generated by Django 3.0.9 on 2020-08-12 15:10

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import login.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('nickname', models.CharField(max_length=100, validators=[login.models.min_length_2_validator], verbose_name='닉네임')),
                ('created_on', models.DateTimeField(auto_now_add=True, verbose_name='등록일자')),
                ('updated_on', models.DateTimeField(auto_now=True, verbose_name='수정일자')),
                ('city', models.CharField(choices=[('서울특별시', '서울특별시')], max_length=30, verbose_name='선호도시')),
                ('gu', models.CharField(choices=[('강남구', '강남구'), ('송파구', '송파구'), ('서초구', '서초구'), ('강동구', '강동구'), ('관악구', '관악구'), ('영등포구', '영등포구'), ('강서구', '강서구'), ('양천구', '양천구'), ('구로구', '구로구'), ('금천구', '금천구'), ('종로구', '종로구'), ('중구', '중구'), ('동대문구', '동대문구'), ('중랑구', '중랑구'), ('마포구', '마포구'), ('용산구', '용산구'), ('성동구', '성동구'), ('광진구', '광진구'), ('은평구', '은평구'), ('서대문구', '서대문구'), ('성북구', '성북구'), ('강북구', '강북구'), ('도봉구', '도봉구'), ('노원구', '노원구')], max_length=30, verbose_name='선호구')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'member',
                'db_table': 'member',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Creator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creator_name', models.CharField(max_length=100, verbose_name='크리에이터명')),
                ('creator_photo', models.ImageField(upload_to='creator_photo/%Y/%m/%d/')),
                ('desc', models.TextField(blank=True)),
                ('member', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('to_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='login.Creator')),
            ],
        ),
    ]
